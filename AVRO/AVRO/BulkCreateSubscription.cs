// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by AvroDotnet, version 1.11.1
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace KafkaObjects.AVRO.BulkCreateSubscription
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using global::Avro;
	using global::Avro.Specific;
	
	/// <summary>
	/// A simple message type.
	/// </summary>
	[global::System.CodeDom.Compiler.GeneratedCodeAttribute("AvroDotnet", "1.11.1")]
	public partial class BulkCreateSubscription : global::Avro.Specific.ISpecificRecord
	{
		public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(@"{""type"":""record"",""name"":""BulkCreateSubscription"",""doc"":""A simple message type."",""namespace"":""KafkaObjects.AVRO.BulkCreateSubscription"",""fields"":[{""name"":""CreateSubscriptions"",""type"":{""type"":""array"",""items"":{""type"":""record"",""name"":""CreateSubscription"",""doc"":""A simple message type."",""namespace"":""KafkaObjects.AVRO.CreateSubscription"",""fields"":[{""name"":""UserId"",""doc"":""User id"",""type"":[""int""]},{""name"":""SalesAndSpecOffers"",""doc"":""Sales and special offers flag"",""type"":[""boolean""]},{""name"":""OffersForOrders"",""doc"":""Offers for orders flag"",""type"":[""boolean""]},{""name"":""GoodsRating"",""doc"":""Goods rating flag"",""type"":[""boolean""]},{""name"":""SatisfactionQuestionnaire"",""doc"":""Satisfaction questionnaire flag"",""type"":[""boolean""]}]}}}]}");
		private IList<KafkaObjects.AVRO.CreateSubscription.CreateSubscription> _CreateSubscriptions;
		public virtual global::Avro.Schema Schema
		{
			get
			{
				return BulkCreateSubscription._SCHEMA;
			}
		}
		public IList<KafkaObjects.AVRO.CreateSubscription.CreateSubscription> CreateSubscriptions
		{
			get
			{
				return this._CreateSubscriptions;
			}
			set
			{
				this._CreateSubscriptions = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.CreateSubscriptions;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.CreateSubscriptions = (IList<KafkaObjects.AVRO.CreateSubscription.CreateSubscription>)fieldValue; break;
			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
